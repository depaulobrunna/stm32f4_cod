#include "stm32f4xx.h"                  // Device header

#define EnA TIM4->CCR3 
#define EnB TIM4->CCR4
#define IN1 GPIO_ODR_ODR_1
#define IN2 GPIO_ODR_ODR_2
#define IN3 GPIO_ODR_ODR_3
#define IN4 GPIO_ODR_ODR_4

int main()
{

	//CONFIG DOS PINOS PWM EnA e EnB(PD 14 e 15)
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIODEN;
	GPIOD -> MODER |= GPIO_MODER_MODER14_1|//EnA(PWM MODE)
										GPIO_MODER_MODER15_1;//EnB(PWM MODE)
	GPIOD->AFR[1] |= 2 << GPIO_AFRH_AFSEL14_Pos|
									 2 << GPIO_AFRH_AFSEL15_Pos;		
	GPIOD->OSPEEDR |= 3 << GPIO_OSPEEDR_OSPEED14_Pos|
										3 << GPIO_OSPEEDR_OSPEED15_Pos;
	
	//CONFIG TIMER pwm
	RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
	
	TIM4->PSC = 1 - 1;//VALOR PELO QUAL O CLOCK INICIAL É DIVIDIDO
	TIM4->ARR = 16000 - 1;//QUANTO 'TEMPO'LEVA PARA OCORRER UMA ONDA INTEIRA 1ms
	TIM4->CR1 |= TIM_CR1_CEN;
	
	TIM4->CCMR2 |= 6 << TIM_CCMR2_OC3M_Pos|
								 6 << TIM_CCMR2_OC4M_Pos|
								 TIM_CCMR2_OC3PE|
								 TIM_CCMR2_OC4PE;
	
	TIM4->CCER |= TIM_CCER_CC3E|
								TIM_CCER_CC4E;
	
	TIM4->CR1 |= TIM_CR1_ARPE;
	EnA = 8000 - 1;//tempo alto 0,5ms
	EnB = 8000 - 1;
								 
	//CONFIGURACAO DOS PINOS DE SINAL H/L In1,In2,In3 e In4(PA 1,2,3,4)
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
	GPIOA -> MODER |= GPIO_MODER_MODER1_0|//In1(OUTPUT MODE)(NORMAL)
										GPIO_MODER_MODER2_0|//In2(OUTPUT MODE)(INVERSO)
										GPIO_MODER_MODER3_0|//In3(OUTPUT MODE)(NORMAL)
										GPIO_MODER_MODER4_0;//In4(OUTPUT MODE)(INVERSO)
	GPIOA->ODR |= IN1|IN3;
	GPIOA->ODR &= ~(IN2|IN4);
	
	while(1);
}
